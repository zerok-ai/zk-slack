plugins {
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}


group = 'com.zerok'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.squareup.okhttp3:okhttp:4.10.0'
	implementation group: 'com.slack.api', name: 'bolt-servlet', version: '1.34.0'
	implementation 'com.slack.api:slack-api-model:1.34.0'
	implementation 'io.projectreactor:reactor-core'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
	implementation 'org.projectlombok:lombok:1.18.30'

	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	testCompileOnly 'org.projectlombok:lombok:1.18.30'

	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
//	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}

tasks.named('test') {
	useJUnitPlatform()
}

//tasks.register('customFatJar', Jar) {
//	manifest {
//		attributes 'Main-Class': 'com.zerok.slackintegration.SlackMessageBuilder'
//	}
//	archiveBaseName.set('all-in-one-jar')  // Set the archive base name = 'all-in-one-jar'
//	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
//	with jar
//}

bootJar {
	manifest {
		attributes(
				'Main-Class': 'com.zerok.slackintegration.ZkSlackApplication'
		)
	}
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}
