apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zk-slack.fullname" . }}
  labels:
    app: zk-slack
  {{- include "zk-slack.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: zk-slack
    {{- include "zk-slack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: zk-slack
      {{- include "zk-slack.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zk-slack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.dockerBase }}/{{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
{{/*          livenessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /actuator/health*/}}
{{/*              port: http*/}}
{{/*            initialDelaySeconds: 60 # Wait for the application to start*/}}
{{/*            periodSeconds: 10*/}}
{{/*          readinessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /actuator/health # Adjust the path based on your application*/}}
{{/*              port: http*/}}
{{/*            initialDelaySeconds: 15 # Wait for the application to start*/}}
{{/*            periodSeconds: 10 # Check the readiness every 10 seconds*/}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /opt/zk-slack-configmap.yaml
            name: zk-slack-configmap
            subPath: zk-slack-configmap.yaml
          env:
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: pl-db-secrets
                  key: PL_POSTGRES_PASSWORD
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: pl-db-secrets
                  key: PL_POSTGRES_USERNAME
      volumes:
      - configMap:
          name: zk-slack-configmap
        name: zk-slack-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
